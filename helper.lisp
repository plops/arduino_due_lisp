(in-package :arv)

(defmethod average-images ((c camera) &key (number 100) (use-dark t))
  (let* ((a (acquire-single-image c))
	 (a1 (.linear a))
	 (accum (make-array (array-dimensions a)
			    :element-type '(unsigned-byte 32)
			    :initial-element 0))
	 (accum1 (.linear accum)))
    ;(push-buffer c)
    (format t "averaging ")
    (dotimes (i number)
      (format t ".")
      (progn 
	(progn (start-acquisition c)
	       (prog1 ;; acquire raw images
		   (pop-block-copy-push-buffer c :use-dark use-dark :out a)
		 (stop-acquisition c)))
	(dotimes (i (length a1))
	 (incf (aref accum1 i) (ash (aref a1 i) -4)))))
    (dotimes (i (length accum1))
      (setf (aref a1 i) (floor (* 16 (aref accum1 i)) number)))
    (terpri)
    a))
